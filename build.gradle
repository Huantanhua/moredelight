plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://api.modrinth.com/maven' }
	maven {
		name = "Greenhouse Maven"
		url = 'https://repo.greenhouse.house/releases/'
	}

	maven {
		name = "Greenhouse Maven (Snapshots)"
		url = 'https://repo.greenhouse.house/snapshots/'
	}
	maven {
		url "https://jitpack.io/"
		content {
			excludeGroup "io.github.fabricators_of_create"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation("vectorwing:FarmersDelight:${project.fdfr_version}") {
		exclude(group: "net.fabricmc")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}

loom {
	runs {
		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.data"
			vmArg "-Dfabric-api.data.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.data.modid=${project.modid}"

			runDir "build/data"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
